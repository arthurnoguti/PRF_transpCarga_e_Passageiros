<style>
p {
  text-align: justify;  
  text-indent: 20px;   
}
</style>  

# Relatório  

***  

```{r, include=FALSE}
library(tidyverse)
library(onsvplot)
library(plotly)
library(cowplot)
library(stringi)
library(knitr)


# BAIXANDO OS DADOS E IMPORTANDO ####

url2011 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2011.zip"
url2012 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2012.zip"
url2013 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2013.zip"
url2014 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2014.zip"
url2015 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2015.zip"
url2016 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2016_atual.zip"
url2017 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2017.zip"
url2018 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2018.zip"
url2019 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2019.zip"
url2020 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2020.zip"
url2021 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2021.zip"
url2022 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2022.zip"
url2023 <- "https://github.com/ONSV/prfdata/raw/main/data-raw/acidentes2023.zip"

# NA PRIMEIRA VEZ QUE FOR RODAR ESSE SCRIPT, DEVE-SE RETIRAR O HASHTAG DA FRENTE DOS DOWNSLOAD.FILE e DOS UNZIP
#download.file(url2011, "acidentes2011.zip")
#download.file(url2012, "acidentes2012.zip")
#download.file(url2013, "acidentes2013.zip")
#download.file(url2014, "acidentes2014.zip")
#download.file(url2015, "acidentes2015.zip")
#download.file(url2016, "acidentes2016_atual.zip")
#download.file(url2017, "acidentes2017.zip")
#download.file(url2018, "acidentes2018.zip")
#download.file(url2019, "acidentes2019.zip")
#download.file(url2020, "acidentes2020.zip")
#download.file(url2021, "acidentes2021.zip")
#download.file(url2022, "acidentes2022.zip")
#download.file(url2023, "acidentes2023.zip")

unzip(zipfile = "data-raw/acidentes2011.zip")
unzip(zipfile = "data-raw/acidentes2012.zip")
unzip(zipfile = "data-raw/acidentes2013.zip")
unzip(zipfile = "data-raw/acidentes2014.zip")
unzip(zipfile = "data-raw/acidentes2015.zip")
unzip(zipfile = "data-raw/acidentes2016_atual.zip")
unzip(zipfile = "data-raw/acidentes2017.zip")
unzip(zipfile = "data-raw/acidentes2018.zip")
unzip(zipfile = "data-raw/acidentes2019.zip")
unzip(zipfile = "data-raw/acidentes2020.zip")
unzip(zipfile = "data-raw/acidentes2021.zip")
unzip(zipfile = "data-raw/acidentes2022.zip")
unzip(zipfile = "data-raw/acidentes2023.zip")


acidentes2011 <- read.csv("acidentes2011.csv")
acidentes2012 <- read.csv("acidentes2012.csv")
acidentes2013 <- read.csv("acidentes2013.csv")
acidentes2014 <- read.csv("acidentes2014.csv")
acidentes2015 <- read.csv("acidentes2015.csv")
acidentes2016 <- read.csv("acidentes2016_atual.csv", sep = ";")
acidentes2017 <- read.csv("acidentes2017.csv", sep = ";")
acidentes2018 <- read.csv("acidentes2018.csv", sep = ";")
acidentes2019 <- read.csv("acidentes2019.csv", sep = ";")
acidentes2020 <- read.csv("acidentes2020.csv", sep = ";")
acidentes2021 <- read.csv("acidentes2021.csv", sep = ";")
acidentes2022 <- read.csv("acidentes2022.csv", sep = ";")
acidentes2023 <- read.csv("acidentes2023.csv", sep = ";")


# AJUSTANDO AS CLASSIFICAÇÕES DAS VARIÁVEIS E CRIANDO UM DATAFRAME GERAL ####

acidentes2011$id_veiculo <- as.numeric(acidentes2011$id_veiculo)
acidentes2011$ano_fabricacao_veiculo <- as.numeric(acidentes2011$ano_fabricacao_veiculo)

acidentes2012$br <- as.numeric(acidentes2012$br)
acidentes2012$km <- as.numeric(acidentes2012$km)
acidentes2012$id_veiculo <- as.numeric(acidentes2012$id_veiculo)
acidentes2012$ano_fabricacao_veiculo <- as.numeric(acidentes2012$ano_fabricacao_veiculo)

acidentes2013$id_veiculo <- as.numeric(acidentes2013$id_veiculo)
acidentes2013$ano_fabricacao_veiculo <- as.numeric(acidentes2013$ano_fabricacao_veiculo)

acidentes2014$id_veiculo <- as.numeric(acidentes2014$id_veiculo)
acidentes2014$ano_fabricacao_veiculo <- as.numeric(acidentes2014$ano_fabricacao_veiculo)

acidentes2015$id_veiculo <- as.numeric(acidentes2015$id_veiculo)
acidentes2015$ano_fabricacao_veiculo <- as.numeric(acidentes2015$ano_fabricacao_veiculo)

acidentes2016$km <- as.numeric(acidentes2016$km)

acidentes2017$km <- as.numeric(acidentes2017$km)

acidentes2018$km <- as.numeric(acidentes2018$km)

acidentes2019$km <- as.numeric(acidentes2019$km)

acidentes2020$km <- as.numeric(acidentes2020$km)
acidentes2020$latitude <- as.character(acidentes2020$latitude)
acidentes2020$longitude <- as.character(acidentes2020$longitude)

acidentes2021$km <- as.numeric(acidentes2021$km)

acidentes2022$km <- as.numeric(acidentes2022$km)

acidentes2023$km <- as.numeric(acidentes2023$km)

acidentes2011 <- acidentes2011 %>% 
  mutate(ano = 2011)
acidentes2012 <- acidentes2012 %>% 
  mutate(ano = 2012)
acidentes2013 <- acidentes2013 %>% 
  mutate(ano = 2013)
acidentes2014 <- acidentes2014 %>% 
  mutate(ano = 2014)
acidentes2015 <- acidentes2015 %>% 
  mutate(ano = 2015)
acidentes2016 <- acidentes2016 %>% 
  mutate(ano = 2016)
acidentes2017 <- acidentes2017 %>% 
  mutate(ano = 2017)
acidentes2018 <- acidentes2018 %>% 
  mutate(ano = 2018)
acidentes2019 <- acidentes2019 %>% 
  mutate(ano = 2019)
acidentes2020 <- acidentes2020 %>% 
  mutate(ano = 2020)
acidentes2021 <- acidentes2021 %>% 
  mutate(ano = 2021)
acidentes2022 <- acidentes2022 %>% 
  mutate(ano = 2022)
acidentes2023 <- acidentes2023 %>% 
  mutate(ano = 2023)

acidentes_2011_2023 <- bind_rows(acidentes2011,acidentes2012,acidentes2013,
                                 acidentes2014,acidentes2015,
                                 acidentes2016,acidentes2017,acidentes2018,
                                 acidentes2019,acidentes2020,acidentes2021,
                                 acidentes2022,acidentes2023)


# MANIPULANDO DOS DADOS ####
## idade ####
acidentes_2011_2023$idade <- replace(
  acidentes_2011_2023$idade
  , acidentes_2011_2023$idade>120 | acidentes_2011_2023$idade < 0, NA
)

## dia da semana #####

acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(dia_semana = dplyr::recode(dia_semana,
                             "Segunda" = "segunda-feira",
                             "segunda-feira" = "segunda-feira",
                             "Ter\xe7a" = "terca-feira",
                             "Ter\xe7a  " = "terca-feira",
                             "ter\xe7a-feira" = "terca-feira",
                             "Quarta" = "quarta-feira",
                             "Quarta " = "quarta-feira",
                             "quarta-feira" = "quarta-feira",
                             "Quinta" = "quinta-feira",
                             "Quinta " = "quinta-feira",
                             "quinta-feira" = "quinta-feira",
                             "Sexta" = "sexta-feira",
                             "Sexta  " = "sexta-feira",
                             "sexta-feira" = "sexta-feira",
                             "S\xe1bado" = "sabado",
                             "S\xe1bado " = "sabado",
                             "s\xe1bado" = "sabado",
                             "Domingo" = "domingo"))

table(acidentes_2011_2023$dia_semana)
## estado fisico #####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(estado_fisico = dplyr::recode(estado_fisico,
                                "Ileso" = "ileso",
                                "Ileso       " = "ileso",
                                "Ferido Leve" = "ferido leve",
                                "Ferido Leve " = "ferido leve",
                                "Les\xf5es Leves" = "ferido leve",
                                "Ferido Grave" = "ferido grave",
                                "Les\xf5es Graves" = "ferido grave",
                                "Morto" = "morto",
                                "Morto       " = "morto",
                                "\xd3bito" = "morto",
                                "Ignorado" = "ignorado",
                                "Ignorado    " = "ignorado",
                                "N\xe3o Informado" = "ignorado",
                                "(null)" = "ignorado"
  ))

table(acidentes_2011_2023$estado_fisico)

acidentes_2011_2023$estado_fisico[acidentes_2011_2023$estado_fisico == ""] <- "ignorado"


## sexo ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(sexo = dplyr::recode(sexo, 
                       "M" = "masculino",
                       "Masculino" = "masculino",
                       "F" = "feminino",
                       "Feminino" = "feminino",
                       "Ignorado" = "ignorado",
                       "I" = "ignorado",
                       "N\xe3o Informado" = "ignorado",
                       "Inv\xe1lido" = "ignorado"))
acidentes_2011_2023$sexo[is.na(acidentes_2011_2023$sexo)] <- "ignorado"
acidentes_2011_2023$sexo[acidentes_2011_2023$sexo == ""] <- "ignorado"

table(acidentes_2011_2023$sexo)
## criando faixa etária ####
library(RcmdrMisc)
table(acidentes_2011_2023$idade, useNA = "always")

acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(faixa_etaria = binVariable(idade, bins=6, 
                                    method='intervals', labels=NULL))
## classificacao do sinistro ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(classificacao_acidente = dplyr::recode(classificacao_acidente,
                                                "Sem V\xedtimas" = "sem vitimas",
                                                "Sem V\xedtimas        " = "sem vitimas",
                                                "Com V\xedtimas Fatais " = "com vitimas fatais",
                                                "Com V\xedtimas Fatais" = "com vitimas fatais",
                                                "Com V\xedtimas Feridas" = "com vitimas feridas",
                                                "Ignorado" = "ignorado",
                                                "Ignorado           " = "ignorado",
                                                "(null)" = "ignorado"
  ))

acidentes_2011_2023$classificacao_acidente[acidentes_2011_2023$classificacao_acidente == ""] <- "ignorado"

table(acidentes_2011_2023$classificacao_acidente)
## tipo pista ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(tipo_pista = dplyr::recode(tipo_pista,
                             "Dupla" = "dupla",
                             "Dupla   " = "dupla",
                             "M\xfaltipla" = "multipla",
                             "Simples" = "simples",
                             "Simples " = "simples"))
acidentes_2011_2023$tipo_pista[acidentes_2011_2023$tipo_pista == "(null)"] <- NA
## fase dia ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(fase_dia = dplyr::recode(fase_dia,
                                  "Plena Noite" = "Plena noite"))

acidentes_2011_2023$fase_dia[acidentes_2011_2023$fase_dia == "(null)" ] <- NA
acidentes_2011_2023$fase_dia[acidentes_2011_2023$fase_dia == "" ] <- NA
## uso solo ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(uso_solo = dplyr::recode(uso_solo,
                                  "N\xe3o" = "Nao",
                                  "Rural " = "Rural"))

acidentes_2011_2023$uso_solo[acidentes_2011_2023$uso_solo == "(null)"] <- NA
## condicao metereologica ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(condicao_metereologica = dplyr::recode(condicao_metereologica,
                                         "C\xe9u Claro" = "Ceu Claro",
                                         "Ignorada" = "Ignorado",
                                         "Nevoeiro/neblina" = "Nevoeiro/Neblina"))

acidentes_2011_2023$condicao_metereologica[acidentes_2011_2023$condicao_metereologica == "(null)" ] <- NA
acidentes_2011_2023$condicao_metereologica[acidentes_2011_2023$condicao_metereologica == "" ] <- NA

## tracado via ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(tracado_via = dplyr::recode(tracado_via,
                              "Curva     " = "Curva",
                              "Desvio Tempor\xe1rio" = "Desvio Temporario",
                              "Interse\xe7\xe3o de vias" = "Interseccao de vias",
                              "N\xe3o Informado" = "Nao Informado",
                              "Reta      " = "Reta",
                              "Rotat\xf3ria" = "Rotatoria",
                              "T\xfanel" = "Tunel"))

acidentes_2011_2023$tracado_via[acidentes_2011_2023$tracado_via == "(null)"] <- NA
## tipo acidente ####
acidentes_2011_2023 <- acidentes_2011_2023 %>% 
  mutate(tipo_acidente = dplyr::recode(tipo_acidente,
                                       "Atropelamento de animal" = "Atropelamento de Animal",
                                       "Atropelamento de pessoa" = "Atropelamento de Pedestre",
                                       "Colis\xe3o com bicicleta" = "Colisao com bicicleta",
                                       "Colis\xe3o com objeto" = "Colisao com objeto",
                                       "Colis\xe3o com objeto em movimento" = "Colisao com objeto",
                                       "Colis\xe3o com objeto est\xe1tico" = "Colisao com objeto",
                                       "Colis\xe3o com objeto fixo" = "Colisao com objeto",
                                       "Colis\xe3o com objeto m\xf3vel" = "Colisao com objeto",
                                       "Colis\xe3o frontal" = "Colisao frontal",
                                       "Colis\xe3o lateral" = "Colisao lateral",
                                       "Colis\xe3o lateral mesmo sentido" = "Colisao lateral",
                                       "Colis\xe3o lateral sentido oposto" = "Colisao lateral",
                                       "Colis\xe3o transversal" = "Colisao transversal",
                                       "Colis\xe3o Transversal" = "Colisao transversal",
                                       "Colis\xe3o traseira" = "Colisao traseira",
                                       "Danos Eventuais" = "Danos eventuais",
                                       "Derramamento de Carga" = "Derramamento de carga",
                                       "Eventos at\xedpicos" = "Eventos atipicos",
                                       "Inc\xeandio" = "Incendio",
                                       "Queda de motocicleta / bicicleta / ve\xedculo" = "Queda de motocicleta / bicicleta / veiculo",
                                       "Queda de ocupante de ve\xedculo" = "Queda de ocupante de veiculo",
                                       "Sa\xedda de leito carro\xe7\xe1vel" = "Saida de leito carrocavel",
                                       "Sa\xedda de Pista" = "Saida de Pista"))

acidentes_2011_2023$tipo_acidente[acidentes_2011_2023$tipo_acidente == ""] <- NA

# AGRUPANDO OS DADOS PARA O TRANSP DE PASSAGEIROS E DE CARGA ####
#passageiro
pass_sin <- subset(acidentes_2011_2023, tipo_veiculo == "\xd4nibus" | tipo_veiculo == "Micro\xf4nibus" )

#carga
carg_sin <- subset(acidentes_2011_2023, 
                   tipo_veiculo == "Caminh\xe3o"| 
                     tipo_veiculo == "Caminh\xe3o-Trator"| 
                     tipo_veiculo == "Caminh\xe3o-trator"|
                     tipo_veiculo == "Caminh\xe3o-Tanque"|
                     tipo_veiculo == "Reboque")

##########################################################################################
# ANALISE DE DADOS A PARTIR DOS DADOS DE SINISTROS - CONSIDERANDO ID COMO CHAVE PRIMÁRIA ####
acidentes11_23unique <- acidentes_2011_2023[!duplicated(acidentes_2011_2023$id), ]
carg11_23unique <- carg_sin[!duplicated(carg_sin$id), ]
pass11_23unique <- pass_sin[!duplicated(pass_sin$id), ]

acidentes11_23unique <- acidentes11_23unique %>% 
  mutate(hora = as.numeric(substr(horario, start = 1, stop = 2)))
carg11_23unique <- carg11_23unique %>% 
  mutate(hora = as.numeric(substr(horario, start = 1, stop = 2)))
pass11_23unique <- pass11_23unique %>% 
  mutate(hora = as.numeric(substr(horario, start = 1, stop = 2)))

```  

<p>De acordo com o institucional da Polícia Rodoviária Federal (PRF) [^1],  

> “Atualmente, a Polícia Rodoviária Federal tem sob sua responsabilidade a segurança viária e a prevenção e repressão qualificada ao crime em mais de 75 mil quilômetros de rodovias e estradas federais em todos os estados brasileiros e nas áreas de interesse da União”.   

<p>No que compete à responsabilidade com a segurança viária, a PRF disponibiliza uma base de dados [^2] que consta as informações relativas aos sinistros ocorridos em rodovias federais que vem sendo utilizada por diversas instituições interessadas na produção de conteúdos capazes de auxiliar na redução do número de mortos e feridos no trânsito brasileiro, como é o caso do Observatório Nacional de Segurança Viária (ONSV).  
<p>Essa base de dados fornecida pela PRF é relativa às vítimas dos sinistros de trânsito ocorridos em rodovias federais, onde cada observação representa uma vítima do sinistro. Para este estudo, foram utilizados os dados de 2011 até 2023. O presente estudo tem por objetivo apresentar uma análise da sinistralidade no Transporte de Cargas e Passageiros nas rodovias federais brasileiras. A metodologia inclui a realização de análises descritivas e o emprego de técnicas de verificação de associação e correspondência entre um conjunto de variáveis relativas aos sinistros e às vítimas envolvidas.    
<p>Em razão deste estudo ser específico para o Transporte de Cargas e de Passageiros, foram selecionados apenas os sinistros envolvendo os seguintes tipos de veículos no caso do Transporte de Cargas:   
	
  * Caminhão;    
  * Caminhão-Trator;  
  * Caminhão-Tanque;  
  * Reboque.  
  
<p>No caso do Transporte de Passageiros foram selecionados:  
	
  * Ônibus;    
  * Micro-ônibus.

# Estatísticas descritivas sobre a sinistralidade no Transporte de Cargas e de Passageiros    

***  

<p>Essa seção do trabalho foi dividida em duas partes, a análise focando nos sinistros e a análise focando nas vítimas. Para isso, foram identificadas as vítimas que pertenciam ao mesmo sinistro a partir do número de identificação do sinistro. Com isso foi criada outra base de dados agregando as informações relativas às vítimas e aos sinistros. Já para a análise das vítimas foi apenas utilizado a própria base de dados previamente fornecida pela PRF.    

## Base de dados sobre os sinistros   

<p>Neste tópico serão apresentadas as estatísticas descritivas relativas às características dos sinistros.  Nos gráficos da Seção 2.1.1 podem ser observadas as quantidades de sinistros (com vítimas fatais, com vítimas feridas e sem vítimas) ao longo do período de análise tanto para o Transporte de Cargas quanto para o Transporte de Passageiros. A quantidade de sinistros no Transporte de Cargas foi em torno de 11 vezes maior que no Transportes de Passageiros tomando o ano de 2023 como referência. De 2011 a 2023 houve uma redução geral da quantidade de sinistros nas duas modalidades. A queda especialmente pronunciada do número de sinistros sem vítimas ao longo do período de análise é atribuída a mudanças nos procedimentos de registros, as quais serão discutidas nas próximas seções deste documento.   

```{r, include=FALSE}
carg_total<- (carg11_23unique %>% 
                group_by(classificacao_acidente, ano) %>% 
                summarise(
                  quantidade = n()
                ))

carg_total <- carg_total %>% 
  mutate(
    grupo  = "Transporte de Cargas"
  )

pass_total<- (pass11_23unique %>% 
                group_by(classificacao_acidente, ano) %>% 
                summarise(
                  quantidade = n()
                ))

pass_total <- pass_total %>% 
  mutate(
    grupo = "Transporte de Passageiros"
  )

total_sinistros <- (bind_rows(carg_total,pass_total))
```  

### Evolução da quantidade de sinistros  

::: panel-tabset  

#### Com vítimas fatais    

```{r, echo=FALSE}

g1 <- ggplot(data = total_sinistros %>% filter(classificacao_acidente == "com vitimas fatais"), 
             aes(x = ano, colour = grupo))+ 
  geom_line(aes(y = quantidade))+
  labs(x = "Ano", y = "Quantidade de sinistros com vítimas fatais")+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12),
  )+
  theme_onsv()

ggplotly(g1)
```


#### Com vítimas feridas

```{r, echo=FALSE}
g2 <- ggplot(data = total_sinistros %>% filter(classificacao_acidente == "com vitimas feridas"), 
             aes(x = ano, colour = grupo))+ 
  geom_line(aes(y = quantidade))+
  labs(x = "Ano", y = "Quantidade de sinistros com vítimas feridas")+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

ggplotly(g2)
```

#### Sem vítimas  

```{r, echo=FALSE}
g3 <- ggplot(data = total_sinistros %>% 
               filter(classificacao_acidente == "sem vitimas"), 
             aes(x = ano, colour = grupo))+ 
  geom_line(aes(y = quantidade))+
  labs(x = "Ano", y = "Quantidade de sinistros sem vítimas")+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

ggplotly(g3)
```  

:::

<p>Para analisar a evolução dos tipos de sinistros, foram gerados dois gráficos de barras dinâmicos (Gráficos da seção 2.1.2), que demonstram a porcentagem de ocorrência de cada tipo de sinistro conforme seu respectivo ano.<p>   

### Evolução dos tipos de sinistros    

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(gganimate)

tipo_sinistro_carg <- carg11_23unique %>% 
  group_by(tipo_acidente, ano) %>% 
  summarise(
    total = n()
  )

tipo_sinistro_carg <- na.omit(tipo_sinistro_carg)

total_ano <- tipo_sinistro_carg %>% 
  group_by(ano) %>% 
  summarise(total_ano = sum(total))

tipo_sinistro_carg <- full_join(tipo_sinistro_carg, total_ano, by = 'ano')

tipo_sinistro_carg <- tipo_sinistro_carg %>% 
  mutate(prop_ano = round(total/total_ano,3))%>% 
  mutate(proporção = paste0(prop_ano*100, "%"))

tipo_sinistro_carg2 <- tipo_sinistro_carg %>% 
  group_by(ano) %>% 
  arrange(ano, desc(prop_ano))%>%
  mutate(ranking = row_number()) %>%
  filter(ranking <=15)

animacion <- tipo_sinistro_carg2 %>%
  ggplot() +
  geom_col(aes(ranking, prop_ano, fill = tipo_acidente)) +
  geom_text(aes(ranking, prop_ano, label = as.factor(proporção)), hjust=-0.1) +
  geom_text(aes(ranking, y=0 , label = tipo_acidente), hjust=1.05, size = 2.5) + 
  geom_text(aes(x=15, y=(max(prop_ano)) , label = as.factor(ano)), vjust = 0.2, alpha = 0.5,  col = "gray", size = 20) +
  coord_flip(clip = "off", expand = FALSE) + scale_x_reverse() +
  theme_minimal() + theme(
    panel.grid = element_blank(), 
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    plot.margin = margin(1, 4, 1, 3, "cm")
  ) +
  labs( y = "Proporção no ano")+
  transition_states(ano, state_length = 0, transition_length = 2) +
  enter_fade() +
  exit_fade() + 
  ease_aes('quadratic-in-out') 

animate(animacion, fps = 30, duration = 15, rewind = FALSE)

```

#### Transporte de Passageiros  

```{r, echo=FALSE, warning=FALSE, message=FALSE}
tipo_sinistro_pass <- pass11_23unique %>% 
  group_by(tipo_acidente, ano) %>% 
  summarise(
    total = n()
  )

tipo_sinistro_pass <- na.omit(tipo_sinistro_pass)

total_ano_pass <- tipo_sinistro_pass %>% 
  group_by(ano) %>% 
  summarise(total_ano = sum(total))

tipo_sinistro_pass <- full_join(tipo_sinistro_pass, total_ano_pass, by = 'ano')

tipo_sinistro_pass <- tipo_sinistro_pass %>% 
  mutate(prop_ano = round(total/total_ano,3))%>% 
  mutate(proporção = paste0(prop_ano*100, "%"))

tipo_sinistro_pass2 <- tipo_sinistro_pass %>% 
  group_by(ano) %>% 
  arrange(ano, desc(prop_ano))%>%
  mutate(ranking = row_number()) %>%
  filter(ranking <=15)

animacion2 <- tipo_sinistro_pass2 %>%
  ggplot() +
  geom_col(aes(ranking, prop_ano, fill = tipo_acidente)) +
  geom_text(aes(ranking, prop_ano, label = as.factor(proporção)), hjust=-0.1) +
  geom_text(aes(ranking, y=0 , label = tipo_acidente), hjust=1.05, size = 2.5) + 
  geom_text(aes(x=15, y=(max(prop_ano)) , label = as.factor(ano)), vjust = 0.2, alpha = 0.5,  col = "gray", size = 20) +
  coord_flip(clip = "off", expand = FALSE) + scale_x_reverse() +
  theme_minimal() + theme(
    panel.grid = element_blank(), 
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    plot.margin = margin(1, 4, 1, 3, "cm")
  ) +
  labs( y = "Proporção no ano")+
  transition_states(ano, state_length = 0, transition_length = 2) +
  enter_fade() +
  exit_fade() + 
  ease_aes('quadratic-in-out') 

animate(animacion2, fps = 30, duration = 15, rewind = FALSE)
```  

:::    

<p>Para o Transporte de Cargas, houve uma diminuição significativa para os tipos “Colisão traseira” e “Colisão lateral”, respectivamente, de 29,3% e 27,8% em 2011 para 21,7% e 18,6% em 2023. Já  o “Tombamento” apresentou um aumento de 8% em 2011 para 11,9% em 2023. É interessante notar que em 2017 houve uma mudança na denominação de “Saída da Pista” para “Saída do leito carroçável” para ambas modalidades de transporte.
<p>Já para o Transporte de Passageiros, considerando os anos de 2011 e 2023, houve um aumento de 4,2% nos casos de "Atropelamento de pedestre" e um aumento de 7% nas "Colisões frontais", enquanto a "Colisão traseira" e "Colisão lateral" tiveram uma queda de, respectivamente, 10,4% e 8,4%.  

### Quadro dia da semana *vs* hora do dia  

<p>Os quadros a seguir contém a representação da quantidade de sinistros total entre 2011 e 2023 em cada horário de cada dia da semana. No Transporte de Cargas há uma quantidade de sinistros maior entre os horários de 7 às 19 horas em dias úteis, tendo um pico de sinistros na sexta-feira entre às 16 e 17 horas. No Transporte de Passageiros houve uma quantidade maior de sinistros nos horários entre 7 horas e 18 horas, com uma concentração maior no ínicio e no fim deste período.   

```{r, include=FALSE}
hd_carg <- carg11_23unique %>% 
  group_by(hora, dia_semana) %>% 
  summarise(total = n())

col_order <- c("segunda-feira",
               "terca-feira",
               "quarta-feira",
               "quinta-feira",
               "sexta-feira",
               "sabado",
               "domingo"  )

hd_carg$dia_semana <- factor(hd_carg$dia_semana, levels = col_order)

## pass ####
hd_pass <- pass11_23unique %>% 
  group_by(hora, dia_semana) %>% 
  summarise(total = n())

col_order <- c("segunda-feira",
               "terca-feira",
               "quarta-feira",
               "quinta-feira",
               "sexta-feira",
               "sabado",
               "domingo"  )

hd_pass$dia_semana <- factor(hd_pass$dia_semana, levels = col_order)


```

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}
g5 <- ggplot(hd_carg, aes(x = dia_semana, y = hora,
                          label = total, fill = total))+
  geom_tile()+
  geom_text(size = 2.5)+
  labs(title = "Quantidade de Sinistros - Transporte de Cargas" ,x = NULL, y = "Horário")+
  scale_fill_distiller(palette = "YlOrRd", direction = 1) +
  theme(
    axis.title.y = element_text(size = 12),
    axis.text.x =  element_text(size = 10),
    axis.text.y =  element_text(size = 10)
  )+
  theme_onsv()

ggplotly(g5, tooltip = "text")

```  

#### Transporte de Passageiros  

```{r, echo=FALSE}
g6 <- ggplot(hd_pass, aes(x = dia_semana, y = hora,
                          label = total, fill = total))+
  geom_tile()+
  geom_text(size = 2.5)+
  labs(title = "Quantidade de Sinistros - Transporte de Passageiros" ,x = NULL, y = "Horário")+
  scale_fill_distiller(palette = "YlOrRd", direction = 1) +
  theme(
    axis.title.y = element_text(size = 12),
    axis.text.x =  element_text(size = 10),
    axis.text.y =  element_text(size = 10)
  )+
  theme_onsv()

ggplotly(g6, tooltip = "text")

```  

:::  

## Base de dados sobre as vítimas  

<p>Neste tópico são apresentadas algumas estatísticas a respeito das vítimas envolvidas em sinistros no Transporte de Cargas e de Passageiros, sendo elas ocupantes ou não dos veículos de cargas ou passageiros, incluindo, portanto, a outra parte envolvida no sinsitro. Em relação à idade das vítimas, os histrogramas da seção 2.2.1 mostram que a distribuição é similar no Transporte de Cargas e de Passageiros. A linha pontilhada em vermelho representa a média das idades.  

### Idade  

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE, warning=FALSE}
ggplot(carg_sin, aes(x = idade))+
  geom_histogram(fill = "orange", breaks = c(0:120))+
  labs(title = "Histograma das idades - Transporte de Cargas" ,
       x = "Idade", y = "Quantidade de vítimas")+
  geom_vline(xintercept = mean(carg_sin$idade, na.rm = TRUE), color = "red", linetype = "dashed")+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

```

#### Transporte de Passageiros  

```{r, echo=FALSE, warning=FALSE}

ggplot(pass_sin, aes(x = idade))+
  geom_histogram(fill = "orange", breaks = c(0:120))+
  labs(title = "Histograma das idades - Transporte de Passageiros" ,
       x = "Idade", y = "Quantidade de vítimas")+
  geom_vline(xintercept = mean(pass_sin$idade, na.rm = TRUE), color = "red", linetype = "dashed")+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

```  
  
  
:::  

### Sexo    

<p>Nas tabelas abaixo são apresentadas as porcentagens segundo sexo de cada modalidade de transporte.  

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}

p_sex_carg <- data.frame(
                      Porcentagem  = c(
                              round((table(carg_sin$sexo)[3]/sum(table(carg_sin$sexo)))*100,2),
                              round((table(carg_sin$sexo)[1]/sum(table(carg_sin$sexo)))*100,2),
                              round((table(carg_sin$sexo)[2]/sum(table(carg_sin$sexo)))*100,2)
))


kable(p_sex_carg)

```

#### Transporte de Passageiros  

```{r, echo=FALSE}
p_sex_pass <- data.frame(
                      Porcentagem  = c(
                              round((table(pass_sin$sexo)[3]/sum(table(pass_sin$sexo)))*100,2),
                              round((table(pass_sin$sexo)[1]/sum(table(pass_sin$sexo)))*100,2),
                              round((table(pass_sin$sexo)[2]/sum(table(pass_sin$sexo)))*100,2)
))

kable(p_sex_pass)

```
  
  
:::  

<p>Pode-se notar que, para o Transporte de Cargas, o sexo masculino representa 92,09% da quantidade dos envolvidos em sinistros. Já para o Transporte de Passageiros, o sexo feminino já representa uma quantidade de 26,42%, enquanto o masculino 70,73% dos casos.
<p>Os quadros da seção 2.2.3 contém a representação da quantidade de vítimas segundo sexo e faixa etária. Percebe-se que tanto para o Transporte de Cargas quanto o Transporte de Passageiros, há uma quantidade maior de vítimas do sexo masculino na faixa etária de 20 a 40 anos de idade.

### Quadro sexo *x* faixa etária  

```{r, include=FALSE}
## carg ####
sex_idade_carg <- carg_sin %>% 
  group_by(sexo, faixa_etaria) %>% 
  summarise(total = n())
## pass ####
sex_idade_pass <- pass_sin %>% 
  group_by(sexo, faixa_etaria) %>% 
  summarise(total = n())

sex_idade_carg_semNA<- sex_idade_carg[!is.na(sex_idade_carg$faixa_etaria),]
sex_idade_pass_semNA<- sex_idade_pass[!is.na(sex_idade_pass$faixa_etaria),]
```

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}
g12 <- ggplot(sex_idade_carg_semNA %>% 
                filter(sexo == "feminino"| sexo == "masculino"), 
              aes(x = faixa_etaria, y = sexo,
                  label = total, fill = total))+
  geom_tile()+
  geom_text(size = 4)+
  labs(title = "Quantidade de vítimas" ,
       x = "Faixa etária", y = "Sexo")+
  scale_fill_distiller(palette = "YlOrRd", direction = 1) +
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

ggplotly(g12, tooltip = "text")
```

#### Transporte de Passageiros  

```{r, echo=FALSE}

g13 <- ggplot(sex_idade_pass_semNA %>% 
                filter(sexo == "feminino"| sexo == "masculino"), 
              aes(x = faixa_etaria, y = sexo,
                  label = total, fill = total))+
  geom_tile()+
  geom_text(size = 4)+
  labs(title = "Quantidade de vítimas" ,
       x = "Faixa etária", y = "Sexo")+
  scale_fill_distiller(palette = "YlOrRd", direction = 1) +
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

ggplotly(g13, tooltip = "text")
```  
  
  
:::  

### Evolução do número de vítimas   

<p> Os gráficos desta seção permitem observar a evolução da quantidade de vítimas em sinistros no Transporte de Cargas e de Passageiros. Pode-se observar uma diminuição significativa na quantidade de vítimas ilesas ao longo do período de análise. Esta redução especialmente pronunciada se deve à uma mudança nos procedimentos de registro da PRF. Em 2014 foi implantado o e-DAT (Declaração de Acidentes de Trânsito) que pode ser feita pelos próprios envolvidos no sinistro via internet, de modo que a partir deste ano a PRF não realizava mais o registro do boletim de ocorrência convencional (LPAT) no local do sinistro para os sinistros sem vítima, exceto para os seguintes casos: Lesões em outras pessoas envolvidas no mesmo sinistros; Envolvimento de servidores da PRF; Danos a bens públicos não concedidos à iniciativa privada; Danos ao meio ambiente; Condutor inabilitado, com CNH suspensa ou cassada; Vazamento ou derramamento de produto perigoso, avaria nas embalagens dos produtos perigosos fracionados, danos no equipamento de transporte de produto perigoso a granel; Envolvimento de algum condutor que esteja sob influência de substância psicoativa de uso indevido, independentemente do teor ou da forma de constatação; Ocorrência de incêndio; Veículo localizado; e Condutor não localizado. Em razão disso, as análises seguintes conduzidas neste documento levarão em consideração apenas os dados referentes ao período 2019-2023.
<p>Para demais as classificações houve, de modo geral, uma redução do número de vítimas ao longo do período analisado.   

  
```{r, include=FALSE}
## carg ####
table(carg_sin$estado_fisico)
n_vit_ano_estfis_carg <- carg_sin %>% 
  group_by(ano, estado_fisico) %>% 
  summarise(quantidade = n())

## pass ####
table(pass_sin$estado_fisico)
n_vit_ano_estfis_pass <- pass_sin %>% 
  group_by(ano, estado_fisico) %>% 
  summarise(quantidade = n())
```

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}
g8 <- ggplot(n_vit_ano_estfis_carg, aes(x = ano, y = quantidade, colour = estado_fisico))+
  geom_line()+
  labs(x = "Ano", y = "Quantidade de vítimas - Transporte de Cargas")+
  scale_y_continuous(limits = c(0,75000))+
  scale_x_continuous(limits = c(2011,2023), breaks = c(2011,2015,2020,2023))+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

ggplotly(g8)
```

#### Transporte de Passageiros  

```{r, echo=FALSE}

g9 <- ggplot(n_vit_ano_estfis_pass, aes(x = ano, y = quantidade, colour = estado_fisico))+
  geom_line()+
  labs(x = "Ano", y = "Quantidade de vítimas - Transporte de Passageiros")+
  scale_y_continuous(limits = c(0,75000))+
  scale_x_continuous(limits = c(2011,2023), breaks = c(2011,2015,2020,2023))+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()

ggplotly(g9)
```  

:::  

### Severidade do estado das vítimas      

<p> Para avaliar a taxa de severidade ao decorrer dos anos, foi gerado o gráfico 2.2.5.1. A taxa de severidade representa a soma entre os "feridos graves" mais os "mortos" dividido pelo total de sinistros. Para o Transporte de Cargas, o ano de 2022 resultou com a maior taxa de severidade (10% das vítimas de todos os sinistros com Transporte de Cargas nesse ano foram classificados como "feridos graves" ou "mortos"), enquanto para o Transporte de Passageiros foi no ano de 2021 com 8,87% dos casos. Nota-se ainda que no Transporte de Cargas há uma tendência de aumento da severidade, já no Transporte de Passageiros, uma tendência de redução.  


#### Evolução da taxa de severidade  
```{r, include=FALSE}
## carg ####
x1 <- n_vit_ano_estfis_carg$quantidade [n_vit_ano_estfis_carg$estado_fisico == "ferido grave"]
y1 <- n_vit_ano_estfis_carg$quantidade [n_vit_ano_estfis_carg$estado_fisico == "morto"]
z1 <- n_vit_ano_estfis_carg %>% 
  group_by(ano) %>% 
  summarise(total = sum(quantidade))

taxa_sev_carg <- data.frame(ano = c(2011:2023),
                            severidade = (x1+y1)/z1[,2], 
                            grupo = "Transporte de Cargas")
## pass ####
x2 <- n_vit_ano_estfis_pass$quantidade [n_vit_ano_estfis_pass$estado_fisico == "ferido grave"]
y2 <- n_vit_ano_estfis_pass$quantidade [n_vit_ano_estfis_pass$estado_fisico == "morto"]
z2 <- n_vit_ano_estfis_pass %>% 
  group_by(ano) %>% 
  summarise(total = sum(quantidade))

taxa_sev_pass <- data.frame(ano = c(2011:2023),
                            severidade = (x2+y2)/z2[,2],
                            grupo = "Transporte de Passageiros")

taxa_sev <- bind_rows(taxa_sev_carg,taxa_sev_pass)
```  

```{r, echo=FALSE}
g10 <- ggplot(filter(taxa_sev, ano %in% c("2019","2020","2021","2022","2023"))
              , aes(x = ano,y = total, colour = grupo))+
  geom_line()+
  theme_onsv()+
  labs(x = "Ano", y = "Taxa de severidade")+
  scale_x_continuous(limits = c(2019,2023))+
  theme(
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x =  element_text(size = 12),
    axis.text.y =  element_text(size = 12)
  )+
  theme_onsv()


ggplotly(g10)
```


# Associação entre as variáveis do sinistro   

***  

```{r, include=FALSE}
chisq.test(carg_sin$sexo, carg_sin$estado_fisico)
chisq.test(carg_sin$idade, carg_sin$estado_fisico)

# CONDUTORES TRANSPORTE DE CARGA ####
condutores_carga <- carg_sin[,c("sexo",
                                "idade",
                                "estado_fisico",
                                "tipo_envolvido",
                                "ano")] %>% 
  filter(tipo_envolvido == "Condutor" &
           ano == c("2019","2020","2021","2022","2023"))

condutores_carga <- condutores_carga[,c(-4,-5)]

condutores_carga$idade [condutores_carga$idade >= 60] <- "idoso"
condutores_carga$idade [condutores_carga$idade >= 30 & condutores_carga$idade < 60] <- "adulto"
condutores_carga$idade [condutores_carga$idade >= 18 & condutores_carga$idade < 30] <- "jovem"
condutores_carga$idade [condutores_carga$idade < 18] <- NA
condutores_carga$idade [condutores_carga$idade == 7 |
                        condutores_carga$idade == 8 |
                        condutores_carga$idade == 9] <- NA

condutores_carga$sexo[condutores_carga$sexo == "ignorado"] <- NA
condutores_carga$estado_fisico[condutores_carga$estado_fisico == "ignorado"] <- NA

condutores_carga <- na.omit(condutores_carga)
```

<p>Para essas análises, também foram considerado apenas os anos de 2019 até 2023. Para a verificação da associação entre as variáveis da base de dados utilizou-se primeiramente o teste do qui-quadrado. Para isso, as variáveis quantitativas foram convertidas em variáveis qualitativas categóricas. A associação entre as seguintes variáveis resultou estatistiamente significativa a um nível de confiança de 95%:  
	
  * Estado físico e Idade;    
  * Estado físico e Sexo;  
  * Classificação do sinistro e Condição metereológica;  
  * Classificação do sinistro e Fase do dia;
  * Classificação do sinistro e Tipo de pista;
  * Classificação do sinistro e Traçado da via;  

```{r, warning=FALSE, include=FALSE}
chisq.test(condutores_carga$estado_fisico, condutores_carga$idade)
```  


<p>Tendo em vista a existência dessa  associação, de maneira complementar foi utilizado o método estatístico de Análise de Correspondência (ANACOR) para analisar as categorias de cada variável que contribuem para esta associação. A ANACOR permite a elaboração do mapa perceptual, em que as categorias das variáveis são plotadas segundo duas dimensões. Aquelas categorias mais próximas umas das outras representam um maior nível de associação. 
<p> Na sequência, para facilitar a identificação das categorias mais próximas no mapa perceptual, foi utilizado o método de clusterização para gerar grupos (clusters) com as categorias que possuíam maior associação entre si.  

## Estado físico da vítima *x* Características da vítima   
<p>Essa seção trata da análise da associação entre a variável "Estado físico" e as variáveis relacionadas às características das vítimas (sexo e idade).  

```{r, include=FALSE}
library('tidyverse')
library('FactoMineR')
library('factoextra')
library(onsvplot)

# Número de Dim = Num de Categorias - Num de variáveis
cond_mca_carga <- MCA(condutores_carga, ncp = 6, graph = FALSE)

fviz_mca_biplot(cond_mca_carga, geom.ind = "none")

cond_mca_carga$var$coord


# CONDUTORES TRANSPORTE DE PASSAGEIROS ####
condutores_pass <- pass_sin[,c("sexo",
                                "idade",
                                "estado_fisico",
                                "tipo_envolvido",
                               "ano")] %>% 
  filter(tipo_envolvido == "Condutor" &
           ano == c("2019","2020","2021","2022","2023"))

condutores_pass <- condutores_pass[,c(-4,-5)]

condutores_pass$idade [condutores_pass$idade >= 60] <- "idoso"
condutores_pass$idade [condutores_pass$idade >= 30 & condutores_pass$idade < 60] <- "adulto"
condutores_pass$idade [condutores_pass$idade >= 18 & condutores_pass$idade < 30] <- "jovem"
condutores_pass$idade [condutores_pass$idade < 18] <- NA
condutores_pass$idade [condutores_pass$idade == 7 |
                          condutores_pass$idade == 8 |
                          condutores_pass$idade == 9] <- NA

condutores_pass$sexo [condutores_pass$sexo == "ignorado"] <- NA
condutores_pass$estado_fisico [condutores_pass$estado_fisico == "ignorado"] <- NA


condutores_pass <- na.omit(condutores_pass)

# Número de Dim = Num de Categorias - Num de variáveis
cond_mca_pass <- MCA(condutores_pass, ncp = 6, graph = FALSE)
cond_mca_pass$eig

fviz_mca_biplot(cond_mca_pass, geom.ind = "none", habillage = "estado_fisico")
# condutores envolvidos com sinistros que tiveram ao menos 1 veiculo de transporte de carga ####
id_carg <- carg_sin$id[!duplicated(carg_sin$id)]

sin_com_carg <- (subset(acidentes_2011_2023, id %in% id_carg))

sin_com_carg <- subset(sin_com_carg, tipo_envolvido == "Condutor" &  
                         tipo_veiculo != "Caminh\xe3o" & 
                         tipo_veiculo != "Caminh\xe3o-Trator" &
                         tipo_veiculo != "Caminh\xe3o-trator" & 
                         tipo_veiculo != "Caminh\xe3o-Tanque" &
                         tipo_veiculo != "Reboque")

# condutores envolvidos com sinistros que tiveram ao menos 1 veiculo de transporte de passageiros ####
id_pass <- pass_sin$id[!duplicated(pass_sin$id)]

sin_com_pass <- (subset(acidentes_2011_2023, id %in% id_pass))

sin_com_pass <- subset(sin_com_pass, tipo_envolvido == "Condutor" &  
                         tipo_veiculo != "\xd4nibus" & 
                         tipo_veiculo != "Micro\xf4nibus"  
)

# CONDUTORES ENVOLVIDOS COM TRANSPORTE DE CARGA ####
env_carga <- sin_com_carg[,c("sexo",
                                "idade",
                                "estado_fisico")] 

env_carga$idade [env_carga$idade >= 60] <- "idoso"
env_carga$idade [env_carga$idade >= 30 & env_carga$idade < 60] <- "adulto"
env_carga$idade [env_carga$idade >= 18 & env_carga$idade < 30] <- "jovem"
env_carga$idade [env_carga$idade < 18] <- NA
env_carga$idade [env_carga$idade == 7 |
                   env_carga$idade == 8 |
                   env_carga$idade == 9] <- NA

env_carga$sexo [env_carga$sexo == "ignorado"] <- NA
env_carga$estado_fisico [env_carga$estado_fisico == "ignorado"] <- NA

env_carga <- na.omit(env_carga)

# Número de Dim = Num de Categorias - Num de variáveis
cond_mca_env_carga <- MCA(env_carga, ncp = 6, graph = FALSE)
cond_mca_env_carga$eig

fviz_mca_biplot(cond_mca_env_carga, geom.ind = "none", habillage = "estado_fisico")
# ENVOLVIDOS COM TRANSPORTE DE PASSAGEIROS ####
env_pass <- sin_com_pass[,c("sexo",
                             "idade",
                             "estado_fisico")] 

env_pass$idade [env_pass$idade >= 60] <- "idoso"
env_pass$idade [env_pass$idade >= 30 & env_pass$idade < 60] <- "adulto"
env_pass$idade [env_pass$idade >= 18 & env_pass$idade < 30] <- "jovem"
env_pass$idade [env_pass$idade < 18] <- NA
env_pass$idade [env_pass$idade == 7 |
                   env_pass$idade == 8 |
                   env_pass$idade == 9] <- NA

env_pass$sexo [env_pass$sexo == "ignorado"] <- NA
env_pass$estado_fisico [env_pass$estado_fisico == "ignorado"] <- NA

env_pass <- na.omit(env_pass)

# Número de Dim = Num de Categorias - Num de variáveis
cond_mca_env_pass <- MCA(env_pass, ncp = 6, graph = FALSE)
cond_mca_env_pass$eig

fviz_mca_biplot(cond_mca_env_pass, geom.ind = "none", habillage = "estado_fisico")

# Graficos ####
fviz_mca_biplot(cond_mca_carga, geom.ind = "none")
fviz_mca_biplot(cond_mca_pass, geom.ind = "none")
fviz_mca_biplot(cond_mca_env_carga, geom.ind = "none")
fviz_mca_biplot(cond_mca_env_pass, geom.ind = "none")

df_cond_mca_carga <- (data.frame(cond_mca_carga$var$coord, variavel = c("sexo","sexo",
                                                                        "idade","idade","idade",
                                                                        "estado_fisico","estado_fisico",
                                                                        "estado_fisico","estado_fisico")))
df_cond_mca_pass <- (data.frame(cond_mca_pass$var$coord, variavel = c("sexo","sexo",
                                                                        "idade","idade","idade",
                                                                        "estado_fisico","estado_fisico",
                                                                        "estado_fisico","estado_fisico")))
df_cond_mca_env_carg <- (data.frame(cond_mca_env_carga$var$coord, variavel = c("sexo","sexo",
                                                                      "idade","idade","idade",
                                                                      "estado_fisico","estado_fisico",
                                                                      "estado_fisico","estado_fisico")))
df_cond_mca_env_pass <- (data.frame(cond_mca_env_pass$var$coord, variavel = c("sexo","sexo",
                                                                               "idade","idade","idade",
                                                                               "estado_fisico","estado_fisico",
                                                                               "estado_fisico","estado_fisico")))

# Clusterização #####
# carga #####
df_cond_mca_carga<- df_cond_mca_carga %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_carg <- dist(df_cond_mca_carga[,c(8,9)], method = "euclidean")

distancia.hc_carg <- hclust(d=distancia_carg, method="average")
fviz_dend(distancia.hc_carg)
# pass ####

df_cond_mca_pass<- df_cond_mca_pass %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_pass <- dist(df_cond_mca_pass[,c(8,9)], method = "euclidean")

distancia.hc_pass <- hclust(d=distancia_pass, method="average")
fviz_dend(distancia.hc_pass)

# env carga ######
df_cond_mca_env_carg<- df_cond_mca_env_carg %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_env_carg <- dist(df_cond_mca_env_carg[,c(8,9)], method = "euclidean")

distancia.hc_env_carg <- hclust(d=distancia_env_carg, method="average")
fviz_dend(distancia.hc_env_carg)

# env pass #####
df_cond_mca_env_pass<- df_cond_mca_env_pass %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_env_pass <- dist(df_cond_mca_env_pass[,c(8,9)], method = "euclidean")

distancia.hc_env_pass <- hclust(d=distancia_env_pass, method="average")
fviz_dend(distancia.hc_env_pass)
``` 

### Mapas perceptuais da ANCOR    

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}
ggplot(data = df_cond_mca_carga, aes(x = Dim.1, y = Dim.2, color = variavel))+
  geom_point()+
  geom_label(label = rownames(df_cond_mca_carga))+
  labs(x = "Dim1 (17.4%)", y = "Dim2 (17.2%)")+
  geom_hline(yintercept = 0, colour = "black", lty="longdash") + 
  geom_vline(xintercept = 0, colour = "black", lty="longdash") + 
  theme_onsv()

```

#### Transporte de Passageiros   

```{r, echo=FALSE}
ggplot(data = df_cond_mca_pass, aes(x = Dim.1, y = Dim.2, color = variavel))+
  geom_point()+
  geom_label(label = rownames(df_cond_mca_pass))+
  labs(x = "Dim1 (18.2%)", y = "Dim2 (17%)")+
  geom_hline(yintercept = 0, colour = "black", lty="longdash") + 
  geom_vline(xintercept = 0, colour = "black", lty="longdash") + 
  theme_onsv()

```  

:::  

### Clusterização das categorias     

::: panel-tabset  

#### Transporte de Cargas   

```{r, echo=FALSE}
fviz_dend(distancia.hc_carg, k = 4, rect = TRUE) 
```

#### Transporte de Passageiros  

```{r, echo=FALSE}
fviz_dend(distancia.hc_pass, k = 5, rect = TRUE) 
```  

:::     

<p>A partir dos mapas perceptuais (seção 3.1.1) e dos clusters identificados (seção 3.1.2) foi possível verificar que para o Transporte de Cargas:

  * A categoria "jovem" está mais associada ao estado físico "ferido grave" e "ferido leve";
  * As categorias "masculino" e "adulto" estão mais associadas ao estado físico "ileso";
  * A categoria "idoso está mais associada ao estado físico "morto";
  * A categoria "feminino" não possui associação significativa com as outras categorias.  

<p>Para o Transporte de Passageiros:

  * A categoria "jovem" está mais associada ao estado físico "ferido grave";
  * As categorias "masculino" e "adulto" estão mais associadas ao estado físico "ileso";
  * A categoria "idoso está mais associada ao estado físico "ferido leve";
  * As categorias "feminino" e "morto" não possuem associação significativa com as outras categorias. 
  
## Classificação do sinistro *x* Características ambientais  

<p>Essa seção tem por objetivo avaliar a associação entre as classificações dos sinistros com características ambientais (condição meteorológica e fase do dia). Para facilitar a visualização do mapa perceptual, a quantidade de categorias da variável "condição meteorológica" foi reduzida, conforme descrito a seguir:  

  * As categorias "Sol", "Céu Claro" e "Nublado" foram agregadas na categoria "sem chuva";
  * As categorias "Chuva" e "Garoa/Chuvisco" foram agregadas na categoria "com chuva".
  
```{r, include=FALSE}
library('tidyverse')
library('FactoMineR')
library('factoextra')

chisq.test(carg11_23unique$tipo_pista, carg11_23unique$classificacao_acidente)
chisq.test(carg11_23unique$condicao_metereologica, carg11_23unique$classificacao_acidente)
chisq.test(carg11_23unique$fase_dia, carg11_23unique$classificacao_acidente)
chisq.test(carg11_23unique$dia_semana, carg11_23unique$classificacao_acidente)
chisq.test(carg11_23unique$uso_solo, carg11_23unique$classificacao_acidente)

# Sinistros com transporte de carga-clima ####
sinis_carga <- carg11_23unique[,c("classificacao_acidente",
                                "fase_dia",
                                "condicao_metereologica",
                                "ano")] %>% 
  filter(ano == c("2019","2020","2021","2022","2023"))

sinis_carga <- sinis_carga[,-4] 

sinis_carga$classificacao_acidente[sinis_carga$classificacao_acidente == "ignorado"] <- NA
sinis_carga$condicao_metereologica[sinis_carga$condicao_metereologica == "Ignorado"] <- NA
sinis_carga <- na.omit(sinis_carga)

sinis_carga <- sinis_carga %>% 
  mutate(condicao_metereologica = dplyr::recode(condicao_metereologica,
                                    "Sol" = "sem chuva",
                                    "Ceu Claro" = "sem chuva",
                                    "Nublado" = "sem chuva",
                                    "Chuva" = "com chuva",
                                    "Garoa/Chuvisco" = "com chuva"))

# Número de Dim = Num de Categorias - Num de variáveis
mca_sinis_carga <- MCA(sinis_carga, ncp = 8 ,graph = FALSE)
fviz_mca_biplot(mca_sinis_carga, geom.ind = "none")


# Sinistros com transporte de carga-pista #### 
sinis_carga2 <- carg11_23unique[,c("classificacao_acidente",
                                  "tipo_pista",
                                  "tracado_via",
                                  "ano")] %>% 
  filter(ano == c("2019","2020","2021","2022","2023"))

sinis_carga2 <- sinis_carga2[,-4]

sinis_carga2$classificacao_acidente[sinis_carga2$classificacao_acidente == "ignorado"] <- NA
sinis_carga2$tracado_via[sinis_carga2$tracado_via == "Nao Informado"] <- NA
sinis_carga2 <- na.omit(sinis_carga2)

sinis_carga2 <- sinis_carga2 %>% 
  mutate(tracado_via = dplyr::recode(tracado_via,
                                                "Interseccao de vias" = "interseccao",
                                                "Rotatoria" = "interseccao",
                                                "Ponte" = "obra de arte",
                                                "Tunel" = "obra de arte",
                                                "Viaduto" = "obra de arte"
                                                ))
sinis_carga2 <- sinis_carga2 %>% 
  mutate(tipo_pista = dplyr::recode(tipo_pista,
                                     "dupla" = "dupla/multipla",
                                     "multipla" = "dupla/multipla"
  ))
# Número de Dim = Num de Categorias - Num de variáveis
mca_sinis_carga2 <- MCA(sinis_carga2, ncp = 8, graph = FALSE)
fviz_mca_biplot(mca_sinis_carga2, geom.ind = "none")

# Sinistros com transporte de passageiro-clima ####
sinis_pass <- pass11_23unique[,c("classificacao_acidente",
                                  "fase_dia",
                                  "condicao_metereologica",
                                 "ano")] %>% 
  filter(ano == c("2019","2020","2021","2022","2023"))

sinis_pass <- sinis_pass[,-4] 
sinis_pass$classificacao_acidente[sinis_pass$classificacao_acidente == "ignorado"] <- NA
sinis_pass$condicao_metereologica[sinis_pass$condicao_metereologica == "Ignorado"] <- NA
sinis_pass <- na.omit(sinis_pass)

sinis_pass <- sinis_pass %>% 
  mutate(condicao_metereologica = dplyr::recode(condicao_metereologica,
                                                "Sol" = "sem chuva",
                                                "Ceu Claro" = "sem chuva",
                                                "Nublado" = "sem chuva",
                                                "Chuva" = "com chuva",
                                                "Garoa/Chuvisco" = "com chuva"))

# Número de Dim = Num de Categorias - Num de variáveis
mca_sinis_pass <- MCA(sinis_pass, ncp = 10 ,graph = FALSE)
fviz_mca_biplot(mca_sinis_pass, geom.ind = "none")


# Sinistros com transporte de passageiro-pista #### 
sinis_pass2 <- pass11_23unique[,c("classificacao_acidente",
                                   "tipo_pista",
                                   "tracado_via",
                                  "ano")] %>% 
  filter(ano == c("2019","2020","2021","2022","2023"))

sinis_pass2 <- sinis_pass2[,-4]

sinis_pass2$classificacao_acidente[sinis_pass2$classificacao_acidente == "ignorado"] <- NA
sinis_pass2$tracado_via[sinis_pass2$tracado_via == "Nao Informado"] <- NA
sinis_pass2 <- na.omit(sinis_pass2)

sinis_pass2 <- sinis_pass2 %>% 
  mutate(tracado_via = dplyr::recode(tracado_via,
                                     "Interseccao de vias" = "interseccao",
                                     "Rotatoria" = "interseccao",
                                     "Ponte" = "obra de arte",
                                     "Tunel" = "obra de arte",
                                     "Viaduto" = "obra de arte"
  ))
sinis_pass2 <- sinis_pass2 %>% 
  mutate(tipo_pista = dplyr::recode(tipo_pista,
                                    "dupla" = "dupla/multipla",
                                    "multipla" = "dupla/multipla"
  ))
# Número de Dim = Num de Categorias - Num de variáveis
mca_sinis_pass2 <- MCA(sinis_pass2, ncp = 11, graph = FALSE)
fviz_mca_biplot(mca_sinis_pass2, geom.ind = "none")


# Graficos ####
fviz_mca_biplot(mca_sinis_carga, geom.ind = "none")
fviz_mca_biplot(mca_sinis_carga2, geom.ind = "none")
fviz_mca_biplot(mca_sinis_pass, geom.ind = "none")
fviz_mca_biplot(mca_sinis_pass2, geom.ind = "none")

df_mca_sinis_carga <- (data.frame(mca_sinis_carga$var$coord, variavel = c("classificação sinistro","classificação sinistro","classificação sinistro",
                                                                        "fase do dia","fase do dia","fase do dia","fase do dia",
                                                                        "condição metereológica","condição metereológica","condição metereológica",
                                                                        "condição metereológica"
                                                                       )))
df_mca_sinis_carga2 <- (data.frame(mca_sinis_carga2$var$coord, variavel = c("classificação sinistro","classificação sinistro","classificação sinistro",
                                                                            "tipo pista","tipo pista",
                                                                            "traçado via","traçado via","traçado via","traçado via",
                                                                            "traçado via","traçado via")))
df_mca_sinis_pass <- (data.frame(mca_sinis_pass$var$coord, variavel = c("classificação sinistro","classificação sinistro","classificação sinistro",
                                                                          "fase do dia","fase do dia","fase do dia","fase do dia",
                                                                          "condição metereológica","condição metereológica","condição metereológica",
                                                                          "condição metereológica","condição metereológica","condição metereológica")))

df_mca_sinis_pass2 <- (data.frame(mca_sinis_pass2$var$coord, variavel = c("classificação sinistro","classificação sinistro","classificação sinistro",
                                                                            "tipo pista","tipo pista",
                                                                            "traçado via","traçado via","traçado via","traçado via",
                                                                            "traçado via","traçado via")))
# Clusterização #####
# carga-clima #####
df_mca_sinis_carga<- df_mca_sinis_carga %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_carg_clima <- dist(df_mca_sinis_carga[,c(8,9)], method = "euclidean")

distancia.hc_carg_clima <- hclust(d=distancia_carg_clima, method="average")
fviz_dend(distancia.hc_carg_clima)
# carga-pista ####

df_mca_sinis_carga2<- df_mca_sinis_carga2 %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_carg_pista <- dist(df_mca_sinis_carga2[,c(8,9)], method = "euclidean")

distancia.hc_carg_pista <- hclust(d=distancia_carg_pista, method="average")
fviz_dend(distancia.hc_carg_pista)
# passageiros-clima #####
df_mca_sinis_pass<- df_mca_sinis_pass %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_pass_clima <- dist(df_mca_sinis_pass[,c(8,9)], method = "euclidean")

distancia.hc_pass_clima <- hclust(d=distancia_pass_clima, method="average")
fviz_dend(distancia.hc_carg_clima)
# passageiros-pista ####

df_mca_sinis_pass2<- df_mca_sinis_pass2 %>% 
  mutate(Dim1_normalizada = (Dim.1-mean(Dim.1))/sd(Dim.1),
         Dim2_normalizada = (Dim.2-mean(Dim.2))/sd(Dim.2))

distancia_pass_pista <- dist(df_mca_sinis_pass2[,c(8,9)], method = "euclidean")

distancia.hc_pass_pista <- hclust(d=distancia_pass_pista, method="average")
fviz_dend(distancia.hc_pass_pista)
```

### Mapas perceptuais da ANACOR   

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}
ggplot(data = df_mca_sinis_carga, aes(x = Dim.1, y = Dim.2, color = variavel))+
  geom_point()+
  geom_label(label = rownames(df_mca_sinis_carga))+
  labs(x = "Dim1 (14.3%)", y = "Dim2 (13.2%)")+
  geom_hline(yintercept = 0, colour = "black", lty="longdash") + 
  geom_vline(xintercept = 0, colour = "black", lty="longdash") + 
  theme_onsv()

```

#### Transporte de Passageiros  

```{r, echo=FALSE}
ggplot(data = df_mca_sinis_pass, aes(x = Dim.1, y = Dim.2, color = variavel))+
  geom_point()+
  geom_label(label = rownames(df_mca_sinis_pass))+
  labs(x = "Dim1 (12.9%)", y = "Dim2 (10.7%)")+
  geom_hline(yintercept = 0, colour = "black", lty="longdash") + 
  geom_vline(xintercept = 0, colour = "black", lty="longdash") + 
  theme_onsv()
```  

:::  

### Clusterização das categorias  

::: panel-tabset  

#### Transporte de Cargas 

```{r, echo=FALSE}
fviz_dend(distancia.hc_carg_clima, k = 4, rect = TRUE, cex = 0.5) 
```

#### Transporte de Passageiros  

```{r, echo=FALSE}
fviz_dend(distancia.hc_pass_clima, k = 6, rect = TRUE, cex = 0.5) 
```
  
:::    

<p>A partir dos mapas perceptuais (seção 3.2.1) e dos clusters identificados (seção 3.2.2) foi possível verificar que para o Transporte de Cargas:

  * Sinistros com vítimas fatais estão mais associados com a condição metereológica "com chuva" e a fase do dia "pleno dia";
  * Sinistros com vítimas feridas e sem vítimas estão mais associados a condição metereológica "sem chuva" e a fase do dia "anoitecer".  
  
<p>Já para o Transporte de Passageiros, sinistros com vítimas fatais estão mais associados com a fase do dia "Anoitecer" e sinistros com vítimas feridas estão mais associados com a fase do dia "Plena noite".

  
## Classificação do sinistro *x* Características viárias    

<p>Essa seção tem por objetivo avaliar a associação entre as classificações dos sinistros com as características da viárias (tipo de pista e traçado da via).Para facilitar a visualização do mapa perceptual, a quantidade de categorias da variável "tipo de pista", sendo agregadas as categorias "dupla" e "múltipla" para uma categoria denominada "dupla/múltipla"; para a variável "traçado via" foram agregadas as seguintes categorias: 

  * "Intersecção de vias" e "Rotatoria" foram agregadas na categoria "intersecção";
  * "Ponte", "Túnel" e "Viaduto" foram agregadas na categoria "obra de arte".
  
### Mapas perceptuais da ANACOR  

::: panel-tabset  

#### Transporte de Cargas  

```{r, echo=FALSE}
ggplot(data = df_mca_sinis_carga2, aes(x = Dim.1, y = Dim.2, color = variavel))+
  geom_point()+
  geom_label(label = rownames(df_mca_sinis_carga2))+
  labs(x = "Dim1 (14.6%)", y = "Dim2 (13.1%)")+
  geom_hline(yintercept = 0, colour = "black", lty="longdash") + 
  geom_vline(xintercept = 0, colour = "black", lty="longdash") + 
  theme_onsv()
```

#### Transporte de Passageiros  

```{r, echo=FALSE}
ggplot(data = df_mca_sinis_pass2, aes(x = Dim.1, y = Dim.2, color = variavel))+
  geom_point()+
  geom_label(label = rownames(df_mca_sinis_pass2))+
  labs(x = "Dim1 (15.4%)", y = "Dim2 (13.3%)")+
  geom_hline(yintercept = 0, colour = "black", lty="longdash") + 
  geom_vline(xintercept = 0, colour = "black", lty="longdash") + 
  theme_onsv()

```  

:::  

### Clusterização das categorias   

::: panel-tabset  

#### Transporte de Cargas 

```{r, echo=FALSE}
fviz_dend(distancia.hc_carg_pista, k = 8, rect = TRUE, cex = 0.5)
```  

#### Transporte de Passageiros 

```{r, echo=FALSE}
fviz_dend(distancia.hc_pass_pista, k = 6, rect = TRUE, cex = 0.5) 
```  

:::  

<p> A partir dos mapas perceptuais e da clusterização, foi possível verificar que para o Transporte de Cargas, sinistros com vítimas fatais estão mais associados o traçado "interseção", enquanto sinistros com vítimas feridas e sem vítimas estão mais associados com o traçado da via "Reta".
<p>Para o Transporte de Passageiros tem-se que:

  * Sinistros com vítimas fatais estão mais associados com o traçado da via "intersecção";
  * Sinistros com vítimas feridas estão mais associados com o traçado da via "Reta";
  * Sinistros sem vítimas estão mais associados com o tipo de pista "Simples".  
  
# Conclusão   

***  

<p>Como análise geral da sinistralidade no Transporte de Cargas e de Passageiros nas rodovias federais brasileiras tem-se que:

  * Em comparação entre 2011 e 2023 houve uma redução na quantidade de sinistros em ambos; 
  * Houve uma maior incidência de sinistros nos dias úteis entre os horários de 6h às 20h;
  * A proporção do sexo masculino envolvido em sinistros com o Transporte de Cargas e de Passageiros é superior ao feminino;
  * A faixa etária de 20 a 40 anos é a que possui maior quantidade de vítimas;
  * A taxa de severidade vinha aumentando até 2021/2022, mas após esses anos apresentou uma queda, porém com uma tendência geral de aumento no Transporte de Cargas e uma tendência geral de redução no Transporte de Passageiros.
  
<p>A partir da aplicação dos procedimentos de ANACOR e clusterização ficou evidente que a categoria "jovem" está mais associada a sinistros classificados com estado físico "ferido grave" em ambas modalidades de transporte. Para o Transporte de Cargas, a condição metereológica "com chuva" e o traçado da via "intersecção" são as características mais associados com sinistros "com vítimas fatais". Ainda para o Transporte de Cargas, os sinistros "com vítimas fatais" estão mais associados à fase do dia "Anoitecer" e traçado da via "Reta". Para o Transporte de Passageiros, os sinistros com vítimas fatais estão mais associados com o traçado da via "intersecção".

<p>Como conclusão, tem-se que as técnicas estatísticas apresentadas permitiram uma análise descritiva dos sinsitros envolvendo o Transporte de Cargas e de Passageiros e a identificação de fatores de risco associados à ocorrência e à severidade dos sinsitros. 
  
  
# Referências  

[^1]: BRASIL. Polícia Federal Rodoviária. **Institucional**. Disponível em: https://www.gov.br/prf/pt-br/acesso-a-informacao/institucional. Acesso em: 20 de agosto. 2024.        

[^2]: BRASIL. Polícia Federal Rodoviária. **Dados Abertos da PRF**. Disponível em: https://www.gov.br/prf/pt-br/acesso-a-informacao/dados-abertos/dados-abertos-da-prf. Acesso em: 13 de setembro. 2024.  

